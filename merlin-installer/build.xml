<project name="Merlin installation" default="pre-dist" basedir=".">
    <description>
        Builds a new release.
    </description>
    <!-- set global properties for this build -->
    <property name="merlin-app" location="../merlin-app"/>
    <property name="merlin-webapp" location="../merlin-webapp"/>
    <property name="install4j-merlin" location="../../Install4j/Merlin"/>
    <property name="docs" location="../docs"/>
    <property name="dist" location="dist"/>

    <target name="pre-dist" description="Prepares a new release." depends="merlin-mvn, merlin-webapp">
        <echo>
            **************************************************************************************************
            *** 1. Please refer for ensuring all test where OK (>= 44): ../target/site/surefire-report.html **
            *** 2. Build installation files                                                                 **
            *** 3. ant post-dist                                                                            **
            **************************************************************************************************
        </echo>
    </target>

    <target name="post-dist" description="Prepares a new release." depends="merlin-install4j" />

    <target name="maven">
        <exec dir="${dir}" executable="sh">
            <arg line="-c 'mvn ${target}'" />
        </exec>
    </target>

    <!-- cd merlin; mvn clean package assembly:single -->
    <target name="merlin-mvn">
        <!-- surefire-report:report -Daggregate=true -->
        <antcall target="maven">
            <param name="dir" value=".."/>
            <param name="target" value="clean surefire-report:report -Daggregate=true" />
        </antcall>
        <antcall target="maven">
            <param name="dir" value=".."/>
            <param name="target" value="package assembly:single -DskipTests" />
        </antcall>
        <!-- cp merlin-app-*-jar-with-dependencies.jar merlin-app.jar -->
        <fileset id="fulljar.filename" dir="${merlin-app}/target/" includes="merlin-app-*-jar-with-dependencies.jar"/>
        <property name="prop.fulljar.filename" refid="fulljar.filename"/>
        <copy file="${merlin-app}/target/${prop.fulljar.filename}" tofile="${merlin-app}/target/merlin-app.jar" />
    </target>

    <!-- cd merlin-webapp; npm run build -->
    <target name="merlin-webapp">
        <ant dir="${docs}"/>
        <exec dir="${merlin-webapp}" executable="sh">
            <arg line="-c 'npm run build'" />
        </exec>
    </target>


    <!-- cp ../Install4j/Merlin/updates.xml merlin-installer/ -->
    <target name="merlin-install4j">
        <copy file="${install4j-merlin}/updates.xml" todir="." />
    </target>
</project>

<!--
        Run Install4j
        General settings -> Application Info -> Version current version
        Build project
        cd ..
        cp ../Install4j/Merlin/updates.xml merlin-installer/
        Upload updates.xml to SourceForge download dir.
        Testing
        Testing update from previous installation.
        install, test web and java-code.
        Creating Github release
        Create new release
        Specify version, e. g. v0.3.
        Drag merlin_macos_v0.3.dmg to binary section (upload).
        Publish release button (after uploading is finished).
        Testing
        Enable update mechanism
        cd .. (go to merlin top dir.)
        cp ../Install4j/Merlin/updates.xml merlin-installer/
        Commit and push.
-->